@page "/"
@using BlazorAppLogin.Shared;
@using BlazorAppLogin.Authentication
@inject AuthenticationStateProvider authStateProvider

@inject IJSRuntime js
@using System.Security.Claims

<PageTitle>Index</PageTitle>

<AuthorizeView>
    <Authorized>
        <h1>Hello, @context.User.Identity.Name!</h1>
    </Authorized>
    <NotAuthorized>

        <h1>Hello, Guest!</h1>
    </NotAuthorized>
</AuthorizeView>

<a href='dddd'>asfsafafs</a>
@MyHtmlComposer(@message)
Welcome to your new app.


<button type="button" @onclick="show_survey_Click">
    show survey
</button>
<SurveyPrompt Title="How is Blazor working for you?" />
<AuthorizeView>
    <Authorized>
        <br /><br />
        <button class="btn btn-outline-primary" @onclick="DisplayGreetingAlert">Display Greeting Alert</button>
        <h1>@message!</h1>
    </Authorized>
</AuthorizeView>

<br />
<br />

<button @onclick="ShowAlert">Show Alert</button>


@code{

    private string message = "sdsdfdfs";

    private async Task ShowAlert()
    {
        await js.InvokeVoidAsync("test", message);

        //await js.InvokeAsync<object>("Alert", message);
    }

    private MarkupString MyHtmlComposer(string xxxx)
    {
        string html = "<a href='dddd'>asfsafafssss" + xxxx+ "</a>";
        return new MarkupString(html);
    }

    [CascadingParameter]
    private Task  <AuthenticationState>authenticationState{ get; set; }




    private async Task DisplayGreetingAlert(){
        var authState = await authenticationState;
        message = $"Hello {authState.User.Identity.Name}";



        var customeAuthStateProvider = (CustomAuthenticationStateProvider)authStateProvider;

        var authenticationState2 = await customeAuthStateProvider.GetAuthenticationStateAsync();


        string returnSid = authenticationState2.User.Claims.FirstOrDefault(c => c.Type == ClaimTypes.Sid)?.Value;

        message += $"Hello {authenticationState2.User.Identity.Name} Sid{returnSid}";
    }


  


    protected SurveyPrompt sv { get; set; }

    protected void show_survey_Click()
    {
        sv.showsv();
    }
    
    ///////////////////////////////////



}