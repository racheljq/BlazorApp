
@using BlazorAppLogin.Authentication
@inherits LayoutComponentBase


@inject AuthenticationStateProvider authStateProvider
@inject NavigationManager navManager

@using BlazorAppLogin.Data
@inject AppState appstate
@implements IDisposable


<PageTitle>BlazorAppLogin</PageTitle>

<div class="page">
    <div class="sidebar">
        <CustomNavMenu />
    </div>

    <main>
        <div class="top-row px-4" style="background-color:@appstate.SelectedColour">
            Color: @appstate.SelectedColour
            <a href="https://docs.microsoft.com/aspnet/" target="_blank">About</a> 
              
            <AuthorizeView>
                <Authorized>
                    <a @onclick="Logout" href="javascript:void(0)">Logout [@context.User.Identity.Name ]</a>
                </Authorized>
                <NotAuthorized>
                    <a href="/login">Login</a>
                </NotAuthorized>
            </AuthorizeView>

        </div>

        <article class="content px-4">
            @Body
        </article>
    </main>
</div>

@code{
  


    private async Task Logout()
    {

        var customAuthStateProvider = (CustomAuthenticationStateProvider)authStateProvider;
        await customAuthStateProvider.UpdateAuthenticationState(null);
        navManager.NavigateTo("/", true);

    }


    protected override void OnInitialized()
    {
        appstate.OnChange += StateHasChanged;
    }

    public void Dispose()
    {
        appstate.OnChange -= StateHasChanged;
    }
}